{"ast":null,"code":"import ACTION_TYPES from \"./postActionType\";\nexport const INITIAL_STATE = {\n  loading: false,\n  post: {},\n  error: false\n};\n// A reducer takes in the initial state and an action and then it returns an updated form of state\nexport const postReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_START:\n      return {\n        loading: true,\n        error: false,\n        post: {}\n      };\n    case ACTION_TYPES.FETCH_SUCCESS:\n      return {\n        loading: false,\n        error: false,\n        post: action.payload\n      };\n    case ACTION_TYPES.FETCH_ERROR:\n      return {\n        loading: false,\n        error: true,\n        post: {}\n      };\n    default:\n      return state;\n  }\n};\n\n/*\nUSING ELSE IF STATEMENTS INSTEAD OF SWITCH\nif (action.type === 'FETCH_START') {\n    return {\n      loading: true,\n      error: false,\n      post:{}\n    }\n  }\n  else if (action.type === 'FETCH_SUCCESS') {\n    return {\n      loading: false,\n      error: false,\n      post:action.payload\n    }\n  }\n  else if (action.type === 'FETCH_ERROR') {\n    return {\n      loading: false,\n      error: true,\n      post:{}\n    }\n  }\n\n*/","map":{"version":3,"names":["ACTION_TYPES","INITIAL_STATE","loading","post","error","postReducer","state","action","type","FETCH_START","FETCH_SUCCESS","payload","FETCH_ERROR"],"sources":["/Users/pentagonagencieslimited/Documents/GitHub/React-State-Management/src/components/Reducers/postReducer.js"],"sourcesContent":["import ACTION_TYPES from \"./postActionType\";\n\nexport const INITIAL_STATE = {\n  loading: false,\n  post: {},\n  error: false\n};\n// A reducer takes in the initial state and an action and then it returns an updated form of state\n export const postReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_START:\n      return {\n        loading: true,\n        error: false,\n        post:{}\n      }\n    case ACTION_TYPES.FETCH_SUCCESS:\n      return {\n        loading: false,\n        error: false,\n        post:action.payload\n      }\n    case ACTION_TYPES.FETCH_ERROR:\n      return {\n        loading: false,\n        error: true,\n        post:{}\n      }\n    default:\n      return state\n  }\n}\n\n/*\nUSING ELSE IF STATEMENTS INSTEAD OF SWITCH\nif (action.type === 'FETCH_START') {\n    return {\n      loading: true,\n      error: false,\n      post:{}\n    }\n  }\n  else if (action.type === 'FETCH_SUCCESS') {\n    return {\n      loading: false,\n      error: false,\n      post:action.payload\n    }\n  }\n  else if (action.type === 'FETCH_ERROR') {\n    return {\n      loading: false,\n      error: true,\n      post:{}\n    }\n  }\n\n*/"],"mappings":"AAAA,OAAOA,YAAY,MAAM,kBAAkB;AAE3C,OAAO,MAAMC,aAAa,GAAG;EAC3BC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,CAAC,CAAC;EACRC,KAAK,EAAE;AACT,CAAC;AACD;AACC,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,YAAY,CAACS,WAAW;MAC3B,OAAO;QACLP,OAAO,EAAE,IAAI;QACbE,KAAK,EAAE,KAAK;QACZD,IAAI,EAAC,CAAC;MACR,CAAC;IACH,KAAKH,YAAY,CAACU,aAAa;MAC7B,OAAO;QACLR,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE,KAAK;QACZD,IAAI,EAACI,MAAM,CAACI;MACd,CAAC;IACH,KAAKX,YAAY,CAACY,WAAW;MAC3B,OAAO;QACLV,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE,IAAI;QACXD,IAAI,EAAC,CAAC;MACR,CAAC;IACH;MACE,OAAOG,KAAK;EAAA;AAElB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}